name: build-wheels
run-name: build-wheels

on:
  push:
    tags: [ "v*" ]
    paths:
      - ".github/workflows/**"
      - "conda-recipe/**"
      - "genome_kit/**"
      - "setup.py"
      - "setup/**"
      - "src/**"
      - "tests/**"

jobs:
  build:
    strategy:
      matrix:
        arch: [x86_64, aarch64]
        include:
          - arch: x86_64
            image: quay.io/pypa/manylinux_2_28_x86_64
            runner: ubuntu-latest
            wheel_dir: wheels
          - arch: aarch64
            image: quay.io/pypa/manylinux_2_28_aarch64
            runner: ubuntu-24.04-arm
            wheel_dir: wheels/arm

    runs-on: ${{ matrix.runner }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Pre-pull manylinux image
        run: docker pull ${{ matrix.image }}

      - name: Build and repair wheels for Python 3.9–3.12 (${{ matrix.arch }})
        run: |
          docker run --rm -v $(pwd):/io -e GK_BUILD_WHEELS=1 ${{ matrix.image }} /bin/bash -c "
            set -euxo pipefail
            cd /io
            mkdir -p ${{ matrix.wheel_dir }}

            PYTHONS=(
              /opt/python/cp39-cp39/bin/python
              /opt/python/cp310-cp310/bin/python
              /opt/python/cp311-cp311/bin/python
              /opt/python/cp312-cp312/bin/python
            )

            for PYTHON in \${PYTHONS[@]}; do
              \$PYTHON -m pip install -U pip setuptools wheel cmake auditwheel \"numpy==2\"
              rm -rf build dist *.egg-info
              \$PYTHON setup.py bdist_wheel
              cp dist/*.whl ${{ matrix.wheel_dir }}/
            done
          "

      - name: Test wheels across Python 3.9–3.12 (${{ matrix.arch }})
        run: |
          set -euxo pipefail

          for PYVER in 3.9 3.10 3.11 3.12; do
            TAG="cp${PYVER/./}"

            echo "Testing on Python $PYVER (${{ matrix.arch }}) with tag $TAG"

            docker run --rm \
              -v $(pwd)/${{ matrix.wheel_dir }}:/wheels \
              -v $(pwd)/tests:/tests \
              python:$PYVER-slim /bin/bash -c "
                set -euxo pipefail
                apt-get update && apt-get install -y gcc python3-dev
                python -m pip install --upgrade pip
                WHEEL=\$(ls /wheels/*${TAG}*.whl | head -n 1)
                echo 'Installing wheel: ' \$WHEEL
                python -m pip install \$WHEEL
                python -c 'import genome_kit; print(genome_kit.__version__)'
                ls /tests/test_*.py | sed 's/\.py$//' | sed 's/\/tests\//tests./' | CI=1 xargs --verbose -I {} python -m unittest {}
              "
          done
