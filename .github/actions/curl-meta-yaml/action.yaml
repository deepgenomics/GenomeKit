name: 'Download meta.yaml'
description: 'Download meta.yaml from the conda-forge GK feedstock'
runs:
  using: "composite"
  steps:
    - shell: bash -l -e {0}
      run: |
        # Fail if on main branch and conda-recipe/meta.yaml exists
        if [[ "${GITHUB_REF_NAME}" == "main" && -f "conda-recipe/meta.yaml" ]]; then
          echo "ERROR: conda-recipe/meta.yaml should not be committed to main. Failing build."
          exit 1
        fi

        set -x
        mkdir -p conda-recipe

        # If meta.yaml exists, use it directly without modifications
        if [[ -f "conda-recipe/meta.yaml" ]]; then
          echo "WARN: Using existing conda-recipe/meta.yaml file"
          set +x
          exit 0
        fi

        curl -s -L -o conda-recipe/meta.yaml https://raw.githubusercontent.com/conda-forge/genomekit-feedstock/main/recipe/meta.yaml
        export GK_VERSION=$(grep "version = " setup.py | awk -F'"' '{print $2}')

        export OS_TYPE=$(uname)
        if [[ "$OS_TYPE" == "Darwin" ]]; then
          SED_CMD="sed -i '' -E"
        else
          SED_CMD="sed -i"
        fi
        # replace the (non-existent) tarball with local path
        $SED_CMD "s|url: https://github.com/deepgenomics/GenomeKit/archive/refs/tags/v.*$|path: ../|1" conda-recipe/meta.yaml
        # remove the related sha for that tarball
        $SED_CMD "/sha256: /d" conda-recipe/meta.yaml
        # build for all locally allowed versions of python (conda-recipe/conda_build_config.yaml)
        $SED_CMD "/skip: true /d" conda-recipe/meta.yaml
        # set the version to the local release-please version (for docs and docker publish)
        $SED_CMD "s/{% set version = \".+\" %}/{% set version = \"${GK_VERSION}\" %}/" conda-recipe/meta.yaml

        head -10 conda-recipe/meta.yaml
        set +x
